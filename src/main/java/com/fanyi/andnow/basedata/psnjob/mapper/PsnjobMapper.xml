<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fanyi.andnow.basedata.psnjob.mapper.PsnjobMapper" >
  <resultMap id="BaseResultMap" type="com.fanyi.andnow.common.vo.basedata.Psnjob" >
    <id column="pk_psnjob" property="pkPsnjob" jdbcType="INTEGER" />
    <result column="pk_group" property="pkGroup" jdbcType="INTEGER" />
    <result column="pk_org" property="pkOrg" jdbcType="INTEGER" />
    <result column="psncode" property="psncode" jdbcType="VARCHAR" />
    <result column="pk_psncl" property="pkPsncl" jdbcType="INTEGER" />
    <result column="pk_dept" property="pkDept" jdbcType="INTEGER" />
    <result column="startdutydate" property="startdutydate" jdbcType="DATE" />
    <result column="enddutydate" property="enddutydate" jdbcType="DATE" />
    <result column="pk_job" property="pkJob" jdbcType="VARCHAR" />
    <result column="jobname" property="jobname" jdbcType="VARCHAR" />
    <result column="pk_post" property="pkPost" jdbcType="INTEGER" />
    <result column="showorder" property="showorder" jdbcType="INTEGER" />
    <result column="enablestate" property="enablestate" jdbcType="TINYINT" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="creator" property="creator" jdbcType="INTEGER" />
    <result column="creationtime" property="creationtime" jdbcType="TIMESTAMP" />
    <result column="modifier" property="modifier" jdbcType="INTEGER" />
    <result column="modifiedtime" property="modifiedtime" jdbcType="TIMESTAMP" />
    <result column="dr" property="dr" jdbcType="TINYINT" />
    <result column="ts" property="ts" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_psnjob, pk_group, pk_org, psncode, pk_psncl, pk_dept, startdutydate, enddutydate, 
    pk_job, jobname, pk_post, showorder, enablestate, note, creator, creationtime, modifier, 
    modifiedtime, dr, ts
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.fanyi.andnow.basedata.psnjob.service.PsnjobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from bd_psnjob
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from bd_psnjob
    where pk_psnjob = #{pkPsnjob,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from bd_psnjob
    where pk_psnjob = #{pkPsnjob,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fanyi.andnow.basedata.psnjob.service.PsnjobExample" >
    delete from bd_psnjob
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fanyi.andnow.common.vo.basedata.Psnjob" >
    insert into bd_psnjob (pk_psnjob, pk_group, pk_org, 
      psncode, pk_psncl, pk_dept, 
      startdutydate, enddutydate, pk_job, 
      jobname, pk_post, showorder, 
      enablestate, note, creator, 
      creationtime, modifier, modifiedtime, 
      dr, ts)
    values (#{pkPsnjob,jdbcType=INTEGER}, #{pkGroup,jdbcType=INTEGER}, #{pkOrg,jdbcType=INTEGER}, 
      #{psncode,jdbcType=VARCHAR}, #{pkPsncl,jdbcType=INTEGER}, #{pkDept,jdbcType=INTEGER}, 
      #{startdutydate,jdbcType=DATE}, #{enddutydate,jdbcType=DATE}, #{pkJob,jdbcType=VARCHAR}, 
      #{jobname,jdbcType=VARCHAR}, #{pkPost,jdbcType=INTEGER}, #{showorder,jdbcType=INTEGER}, 
      #{enablestate,jdbcType=TINYINT}, #{note,jdbcType=VARCHAR}, #{creator,jdbcType=INTEGER}, 
      #{creationtime,jdbcType=TIMESTAMP}, #{modifier,jdbcType=INTEGER}, #{modifiedtime,jdbcType=TIMESTAMP}, 
      #{dr,jdbcType=TINYINT}, #{ts,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.fanyi.andnow.common.vo.basedata.Psnjob" >
    insert into bd_psnjob
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="pkPsnjob != null" >
        pk_psnjob,
      </if>
      <if test="pkGroup != null" >
        pk_group,
      </if>
      <if test="pkOrg != null" >
        pk_org,
      </if>
      <if test="psncode != null" >
        psncode,
      </if>
      <if test="pkPsncl != null" >
        pk_psncl,
      </if>
      <if test="pkDept != null" >
        pk_dept,
      </if>
      <if test="startdutydate != null" >
        startdutydate,
      </if>
      <if test="enddutydate != null" >
        enddutydate,
      </if>
      <if test="pkJob != null" >
        pk_job,
      </if>
      <if test="jobname != null" >
        jobname,
      </if>
      <if test="pkPost != null" >
        pk_post,
      </if>
      <if test="showorder != null" >
        showorder,
      </if>
      <if test="enablestate != null" >
        enablestate,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="creator != null" >
        creator,
      </if>
      <if test="creationtime != null" >
        creationtime,
      </if>
      <if test="modifier != null" >
        modifier,
      </if>
      <if test="modifiedtime != null" >
        modifiedtime,
      </if>
      <if test="dr != null" >
        dr,
      </if>
      <if test="ts != null" >
        ts,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="pkPsnjob != null" >
        #{pkPsnjob,jdbcType=INTEGER},
      </if>
      <if test="pkGroup != null" >
        #{pkGroup,jdbcType=INTEGER},
      </if>
      <if test="pkOrg != null" >
        #{pkOrg,jdbcType=INTEGER},
      </if>
      <if test="psncode != null" >
        #{psncode,jdbcType=VARCHAR},
      </if>
      <if test="pkPsncl != null" >
        #{pkPsncl,jdbcType=INTEGER},
      </if>
      <if test="pkDept != null" >
        #{pkDept,jdbcType=INTEGER},
      </if>
      <if test="startdutydate != null" >
        #{startdutydate,jdbcType=DATE},
      </if>
      <if test="enddutydate != null" >
        #{enddutydate,jdbcType=DATE},
      </if>
      <if test="pkJob != null" >
        #{pkJob,jdbcType=VARCHAR},
      </if>
      <if test="jobname != null" >
        #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="pkPost != null" >
        #{pkPost,jdbcType=INTEGER},
      </if>
      <if test="showorder != null" >
        #{showorder,jdbcType=INTEGER},
      </if>
      <if test="enablestate != null" >
        #{enablestate,jdbcType=TINYINT},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="creationtime != null" >
        #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        #{dr,jdbcType=TINYINT},
      </if>
      <if test="ts != null" >
        #{ts,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fanyi.andnow.basedata.psnjob.service.PsnjobExample" resultType="java.lang.Integer" >
    select count(*) from bd_psnjob
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bd_psnjob
    <set >
      <if test="group.pkPsnjob != null" >
        pk_psnjob = #{group.pkPsnjob,jdbcType=INTEGER},
      </if>
      <if test="group.pkGroup != null" >
        pk_group = #{group.pkGroup,jdbcType=INTEGER},
      </if>
      <if test="group.pkOrg != null" >
        pk_org = #{group.pkOrg,jdbcType=INTEGER},
      </if>
      <if test="group.psncode != null" >
        psncode = #{group.psncode,jdbcType=VARCHAR},
      </if>
      <if test="group.pkPsncl != null" >
        pk_psncl = #{group.pkPsncl,jdbcType=INTEGER},
      </if>
      <if test="group.pkDept != null" >
        pk_dept = #{group.pkDept,jdbcType=INTEGER},
      </if>
      <if test="group.startdutydate != null" >
        startdutydate = #{group.startdutydate,jdbcType=DATE},
      </if>
      <if test="group.enddutydate != null" >
        enddutydate = #{group.enddutydate,jdbcType=DATE},
      </if>
      <if test="group.pkJob != null" >
        pk_job = #{group.pkJob,jdbcType=VARCHAR},
      </if>
      <if test="group.jobname != null" >
        jobname = #{group.jobname,jdbcType=VARCHAR},
      </if>
      <if test="group.pkPost != null" >
        pk_post = #{group.pkPost,jdbcType=INTEGER},
      </if>
      <if test="group.showorder != null" >
        showorder = #{group.showorder,jdbcType=INTEGER},
      </if>
      <if test="group.enablestate != null" >
        enablestate = #{group.enablestate,jdbcType=TINYINT},
      </if>
      <if test="group.note != null" >
        note = #{group.note,jdbcType=VARCHAR},
      </if>
      <if test="group.creator != null" >
        creator = #{group.creator,jdbcType=INTEGER},
      </if>
      <if test="group.creationtime != null" >
        creationtime = #{group.creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="group.modifier != null" >
        modifier = #{group.modifier,jdbcType=INTEGER},
      </if>
      <if test="group.modifiedtime != null" >
        modifiedtime = #{group.modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="group.dr != null" >
        dr = #{group.dr,jdbcType=TINYINT},
      </if>
      <if test="group.ts != null" >
        ts = #{group.ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bd_psnjob
    set pk_psnjob = #{group.pkPsnjob,jdbcType=INTEGER},
      pk_group = #{group.pkGroup,jdbcType=INTEGER},
      pk_org = #{group.pkOrg,jdbcType=INTEGER},
      psncode = #{group.psncode,jdbcType=VARCHAR},
      pk_psncl = #{group.pkPsncl,jdbcType=INTEGER},
      pk_dept = #{group.pkDept,jdbcType=INTEGER},
      startdutydate = #{group.startdutydate,jdbcType=DATE},
      enddutydate = #{group.enddutydate,jdbcType=DATE},
      pk_job = #{group.pkJob,jdbcType=VARCHAR},
      jobname = #{group.jobname,jdbcType=VARCHAR},
      pk_post = #{group.pkPost,jdbcType=INTEGER},
      showorder = #{group.showorder,jdbcType=INTEGER},
      enablestate = #{group.enablestate,jdbcType=TINYINT},
      note = #{group.note,jdbcType=VARCHAR},
      creator = #{group.creator,jdbcType=INTEGER},
      creationtime = #{group.creationtime,jdbcType=TIMESTAMP},
      modifier = #{group.modifier,jdbcType=INTEGER},
      modifiedtime = #{group.modifiedtime,jdbcType=TIMESTAMP},
      dr = #{group.dr,jdbcType=TINYINT},
      ts = #{group.ts,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fanyi.andnow.common.vo.basedata.Psnjob" >
    update bd_psnjob
    <set >
      <if test="pkGroup != null" >
        pk_group = #{pkGroup,jdbcType=INTEGER},
      </if>
      <if test="pkOrg != null" >
        pk_org = #{pkOrg,jdbcType=INTEGER},
      </if>
      <if test="psncode != null" >
        psncode = #{psncode,jdbcType=VARCHAR},
      </if>
      <if test="pkPsncl != null" >
        pk_psncl = #{pkPsncl,jdbcType=INTEGER},
      </if>
      <if test="pkDept != null" >
        pk_dept = #{pkDept,jdbcType=INTEGER},
      </if>
      <if test="startdutydate != null" >
        startdutydate = #{startdutydate,jdbcType=DATE},
      </if>
      <if test="enddutydate != null" >
        enddutydate = #{enddutydate,jdbcType=DATE},
      </if>
      <if test="pkJob != null" >
        pk_job = #{pkJob,jdbcType=VARCHAR},
      </if>
      <if test="jobname != null" >
        jobname = #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="pkPost != null" >
        pk_post = #{pkPost,jdbcType=INTEGER},
      </if>
      <if test="showorder != null" >
        showorder = #{showorder,jdbcType=INTEGER},
      </if>
      <if test="enablestate != null" >
        enablestate = #{enablestate,jdbcType=TINYINT},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="creationtime != null" >
        creationtime = #{creationtime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifier != null" >
        modifier = #{modifier,jdbcType=INTEGER},
      </if>
      <if test="modifiedtime != null" >
        modifiedtime = #{modifiedtime,jdbcType=TIMESTAMP},
      </if>
      <if test="dr != null" >
        dr = #{dr,jdbcType=TINYINT},
      </if>
      <if test="ts != null" >
        ts = #{ts,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_psnjob = #{pkPsnjob,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fanyi.andnow.common.vo.basedata.Psnjob" >
    update bd_psnjob
    set pk_group = #{pkGroup,jdbcType=INTEGER},
      pk_org = #{pkOrg,jdbcType=INTEGER},
      psncode = #{psncode,jdbcType=VARCHAR},
      pk_psncl = #{pkPsncl,jdbcType=INTEGER},
      pk_dept = #{pkDept,jdbcType=INTEGER},
      startdutydate = #{startdutydate,jdbcType=DATE},
      enddutydate = #{enddutydate,jdbcType=DATE},
      pk_job = #{pkJob,jdbcType=VARCHAR},
      jobname = #{jobname,jdbcType=VARCHAR},
      pk_post = #{pkPost,jdbcType=INTEGER},
      showorder = #{showorder,jdbcType=INTEGER},
      enablestate = #{enablestate,jdbcType=TINYINT},
      note = #{note,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=INTEGER},
      creationtime = #{creationtime,jdbcType=TIMESTAMP},
      modifier = #{modifier,jdbcType=INTEGER},
      modifiedtime = #{modifiedtime,jdbcType=TIMESTAMP},
      dr = #{dr,jdbcType=TINYINT},
      ts = #{ts,jdbcType=TIMESTAMP}
    where pk_psnjob = #{pkPsnjob,jdbcType=INTEGER}
  </update>
</mapper>